var searchIndex = JSON.parse('{\
"tar":{"doc":"A library for reading and writing TAR archives","t":"DNDNNNNNDDENNNNNDDDDENDDDNNEDNNLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLLLLLLLLMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLLLLLLMMMMMMMLLMMMLMMMMMMLLLLLLLLLLMLMMMMMMLLLLLLMLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLMMMMMLLLMLLLLLLMM","n":["Archive","Block","Builder","Char","Complete","Continuous","Deterministic","Directory","Entries","Entry","EntryType","Fifo","File","GNULongLink","GNULongName","GNUSparse","GnuExtSparseHeader","GnuHeader","GnuSparseHeader","Header","HeaderMode","Link","OldHeader","PaxExtension","PaxExtensions","Regular","Symlink","Unpacked","UstarHeader","XGlobalHeader","XHeader","append","append_data","append_dir","append_dir_all","append_file","append_link","append_path","append_path_with_name","as_byte","as_bytes","as_bytes","as_gnu","as_gnu_mut","as_header","as_header","as_header","as_header_mut","as_header_mut","as_header_mut","as_mut_bytes","as_mut_bytes","as_old","as_old_mut","as_ustar","as_ustar_mut","atime","atime","block_special","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","character_special","cksum","cksum","cksum","cksum","clone","clone","clone","clone_into","clone_into","clone_into","contiguous","ctime","ctime","default","dev_major","dev_major","dev_minor","dev_minor","device_major","device_major","device_major","device_minor","device_minor","device_minor","dir","drop","entries","entries_with_seek","entry_size","entry_type","eq","eq","equivalent","equivalent","fifo","file","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","follow_symlinks","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_byte_slice","get_mut","get_ref","gid","gid","gid","gid","gname","gname","groupname","groupname_bytes","groupname_bytes","groupname_bytes","hard_link","header","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_inner","into_iter","into_iter","is_block_special","is_character_special","is_contiguous","is_dir","is_empty","is_extended","is_extended","is_fifo","is_file","is_gnu_longlink","is_gnu_longname","is_gnu_sparse","is_hard_link","is_pax_global_extensions","is_pax_local_extensions","is_symlink","isextended","isextended","key","key_bytes","length","link_name","link_name","link_name_bytes","link_name_bytes","linkflag","linkname","linkname","linkname","longnames","magic","magic","mode","mode","mode","mode","mode","mtime","mtime","mtime","mtime","name","name","name","new","new","new","new","new","new_gnu","new_old","new_ustar","next","next","numbytes","offset","offset","offset","pad","pad","pad","padding","path","path","path_bytes","path_bytes","path_bytes","pax_extensions","prefix","raw","raw_file_position","raw_header_position","read","real_size","realsize","set_atime","set_cksum","set_ctime","set_device_major","set_device_major","set_device_major","set_device_minor","set_device_minor","set_device_minor","set_entry_type","set_gid","set_groupname","set_groupname","set_groupname","set_ignore_zeros","set_link_name","set_link_name_literal","set_mask","set_mask","set_metadata","set_metadata_in_mode","set_mode","set_mtime","set_overwrite","set_path","set_path","set_preserve_mtime","set_preserve_mtime","set_preserve_ownerships","set_preserve_permissions","set_preserve_permissions","set_size","set_uid","set_unpack_xattrs","set_unpack_xattrs","set_username","set_username","set_username","size","size","size","size","size","sparse","sparse","sparse","symlink","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","typeflag","typeflag","uid","uid","uid","uid","uname","uname","unpack","unpack","unpack_in","unused","username","username_bytes","username_bytes","username_bytes","value","value_bytes","version","version"],"q":[[0,"tar"]],"d":["A top-level representation of an archive file.","Block device","A structure for building archives","Character device","All supported metadata, including mod/access times and …","Implementation-defined ‘high-performance’ type, …","Only metadata that is directly relevant to the identity of …","Directory","An iterator over the entries of an archive.","A read-only view into an entry of an archive.","Indicate for the type of file described by a header.","Named pipe (fifo)","A file was unpacked.","GNU extension - long link name (link target)","GNU extension - long file name","GNU extension - sparse file","Representation of the entry found to represent extended …","Representation of the header of an entry in an archive","Description of the header of a spare entry.","Representation of the header of an entry in an archive","Declares the information that should be included when …","Hard link","Representation of the header of an entry in an archive","A key/value pair corresponding to a pax extension.","An iterator over the pax extensions in an archive entry.","Regular file","Symbolic link","When unpacking items the unpacked thing is returned to …","Representation of the header of an entry in an archive","Global extended header","Extended Header","Adds a new entry to this archive.","Adds a new entry to this archive with the specified path.","Adds a directory to this archive with the given path as …","Adds a directory and all of its contents (recursively) to …","Adds a file to this archive with the given path as the …","Adds a new link (symbolic or hard) entry to this archive …","Adds a file on the local filesystem to this archive.","Adds a file on the local filesystem to this archive under …","Returns the raw underlying byte that this entry type …","Returns a view into this header as a byte array.","Returns a view into this header as a byte array.","View this archive header as a raw GNU archive header.","Same as <code>as_gnu</code>, but the mutable version.","Views this as a normal <code>Header</code>","Views this as a normal <code>Header</code>","Views this as a normal <code>Header</code>","Views this as a normal <code>Header</code>","Views this as a normal <code>Header</code>","Views this as a normal <code>Header</code>","Returns a view into this header as a byte array.","Returns a view into this header as a byte array.","View this archive header as a raw “old” archive header.","Same as <code>as_old</code>, but the mutable version.","View this archive header as a raw UStar archive header.","Same as <code>as_ustar_mut</code>, but the mutable version.","Returns the last modification time in Unix time format","","Creates a new entry type representing a block special …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new entry type representing a character special …","Returns the checksum field of this header.","","","","","","","","","","Creates a new entry type representing a contiguous file.","Returns the last modification time in Unix time format","","","","","","","Returns the device major number, if present.","See <code>Header::device_major</code>","See <code>Header::device_major</code>","Returns the device minor number, if present.","See <code>Header::device_minor</code>","See <code>Header::device_minor</code>","Creates a new entry type representing a directory.","","Construct an iterator over the entries in this archive.","Construct an iterator over the entries in this archive for …","Returns the size of entry’s data this header represents.","Returns the type of file described by this header.","","","","","Creates a new entry type representing a FIFO.","Creates a new entry type representing a regular file.","Finish writing this archive, emitting the termination …","","","","","","","","","Follow symlinks, archiving the contents of the file they …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Treats the given byte slice as a header.","Gets mutable reference to the underlying object.","Gets shared reference to the underlying object.","Returns the value of the group’s user ID field","","","","","","Return the group name of the owner of this file.","Returns the group name of the owner of this file, if …","See <code>Header::groupname_bytes</code>","See <code>Header::groupname_bytes</code>","Creates a new entry type representing a hard link.","Returns access to the header of this entry in the archive.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwrap this archive, returning the underlying object.","Unwrap this archive, returning the underlying object.","","","Returns whether this type represents a block special …","Returns whether this type represents a character special …","Returns whether this type represents a contiguous file.","Returns whether this type represents a directory.","Returns true if block is empty","Indicates whether this header will be followed by …","Indicates if another sparse header should be following …","Returns whether this type represents a FIFO.","Returns whether this type represents a regular file.","Returns whether this type represents a GNU long link …","Returns whether this type represents a GNU long name …","Returns whether this type represents a GNU sparse header.","Returns whether this type represents a hard link.","Returns whether this type represents a GNU long name …","Returns whether this type represents a GNU long link …","Returns whether this type represents a symlink.","","","Returns the key for this key/value pair parsed as a string.","Returns the underlying raw bytes for the key of this …","Length of the block","Returns the link name for this entry, if any is found.","Returns the link name stored in this header, if any is …","Returns the link name for this entry, in bytes, if listed.","Returns the link name stored in this header as a byte …","","","","","","","","Changes the HeaderMode that will be used when reading fs …","Returns the mode bits for this file","","","","Returns the last modification time in Unix time format","","","","","","","Create a new archive with the underlying object as the …","Create a new archive builder with the underlying object as …","Crates a new zero’d out sparse header entry.","Create new pax extensions iterator from the given entry …","Creates a new entry type from a raw byte.","Creates a new blank GNU header.","Creates a new blank old header.","Creates a new blank UStar header.","","","","Offset of the block from the start of the file","","","","","","","Returns the path name for this entry.","Returns the raw path name stored in this header.","Returns the raw bytes listed for this entry.","Returns the pathname stored in this header as a byte array.","See <code>Header::path_bytes</code>","Returns an iterator over the pax extensions contained in …","","Indicates whether this iterator will return raw entries or …","Returns the starting position, in bytes, of the file of …","Returns the starting position, in bytes, of the header of …","","Returns the “real size” of the file this header …","","Encodes the <code>atime</code> provided into this header.","Sets the checksum field of this header based on the …","Encodes the <code>ctime</code> provided into this header.","Encodes the value <code>major</code> into the dev_major field of this …","See <code>Header::set_device_major</code>","See <code>Header::set_device_major</code>","Encodes the value <code>minor</code> into the dev_minor field of this …","See <code>Header::set_device_minor</code>","See <code>Header::set_device_minor</code>","Sets the type of file that will be described by this …","Encodes the <code>gid</code> provided into this header.","Sets the group name inside this header.","See <code>Header::set_groupname</code>","See <code>Header::set_groupname</code>","Ignore zeroed headers, which would otherwise indicate to …","Sets the link name for this header.","Sets the link name for this header without any …","Set the mask of the permission bits when unpacking this …","Set the mask of the permission bits when unpacking this …","Blanket sets the metadata in this header from the metadata …","Sets only the metadata relevant to the given HeaderMode in …","Encodes the <code>mode</code> provided into this header.","Encodes the <code>mtime</code> provided into this header.","Indicate whether files and symlinks should be overwritten …","Sets the path name for this header.","See <code>Header::set_path</code>","Indicate whether access time information is preserved when …","Indicate whether access time information is preserved when …","Indicate whether numeric ownership ids (like uid and gid …","Indicate whether extended permissions (like suid on Unix) …","Indicate whether extended permissions (like suid on Unix) …","Encodes the <code>size</code> argument into the size field of this …","Encodes the <code>uid</code> provided into this header.","Indicate whether extended file attributes (xattrs on Unix) …","Indicate whether extended file attributes (xattrs on Unix) …","Sets the username inside this header.","See <code>Header::set_username</code>","See <code>Header::set_username</code>","Returns access to the size of this entry in the archive.","Returns the file size this header represents.","","","","Returns a slice of the underlying sparse headers.","","","Creates a new entry type representing a symlink.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the value of the owner’s user ID field","","","","","","Unpacks the contents tarball into the specified <code>dst</code>.","Writes this file to the specified location.","Extracts this file under the specified path, avoiding …","","Return the user name of the owner of this file.","Returns the user name of the owner of this file, if …","See <code>Header::username_bytes</code>","See <code>Header::username_bytes</code>","Returns the value for this key/value pair parsed as a …","Returns the underlying raw bytes for this value of this …","",""],"i":[0,9,0,9,19,9,19,9,0,0,0,9,27,9,9,9,0,0,0,0,0,9,0,0,0,9,9,0,0,9,9,2,2,2,2,2,2,2,2,9,3,12,3,3,15,16,13,15,16,13,3,12,3,3,3,3,13,13,9,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,9,3,15,16,13,3,9,19,3,9,19,9,13,13,12,16,13,16,13,3,16,13,3,16,13,9,2,20,20,3,3,9,19,9,19,9,9,2,3,15,16,13,26,27,9,19,2,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,3,2,2,3,15,16,13,16,13,3,3,16,13,9,32,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,20,2,21,35,9,9,9,9,26,13,12,9,9,9,9,9,9,9,9,9,13,12,33,33,26,32,3,32,3,15,15,16,13,13,16,13,2,3,15,16,13,3,15,16,13,15,16,13,20,2,12,35,9,3,3,3,21,35,26,26,13,26,15,16,13,12,32,3,32,3,16,32,16,21,32,32,32,13,13,13,3,13,3,16,13,3,16,13,3,3,3,16,13,20,3,3,20,32,3,3,3,3,20,3,16,20,32,20,20,32,3,3,20,32,3,16,13,32,3,15,16,13,12,13,12,9,3,9,19,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,20,21,2,32,3,15,16,13,26,12,35,33,27,9,19,16,13,3,15,16,13,16,13,20,32,32,13,3,3,16,13,33,33,16,13],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3,4],5],[[[2,[1]],3,[7,[6]],4],5],[[[2,[1]],[7,[6]],[7,[6]]],5],[[[2,[1]],[7,[6]],[7,[6]]],5],[[[2,[1]],[7,[6]],8],5],[[[2,[1]],3,[7,[6]],[7,[6]]],5],[[[2,[1]],[7,[6]]],5],[[[2,[1]],[7,[6]],[7,[6]]],5],[9,10],[3,[[11,[10]]]],[12,[[11,[10]]]],[3,[[14,[13]]]],[3,[[14,[13]]]],[15,3],[16,3],[13,3],[15,3],[16,3],[13,3],[3,[[11,[10]]]],[12,[[11,[10]]]],[3,15],[3,15],[3,[[14,[16]]]],[3,[[14,[16]]]],[13,[[5,[17]]]],0,[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],9],[3,[[5,[18]]]],0,0,0,[3,3],[9,9],[19,19],[[]],[[]],[[]],[[],9],[13,[[5,[17]]]],0,[[],12],0,0,0,0,[3,[[5,[[14,[18]]]]]],[16,[[5,[18]]]],[13,[[5,[18]]]],[3,[[5,[[14,[18]]]]]],[16,[[5,[18]]]],[13,[[5,[18]]]],[[],9],[[[2,[1]]]],[[[20,[4]]],[[5,[[21,[4]]]]]],[[[20,[[0,[22,4]]]]],[[5,[[21,[[0,[22,4]]]]]]]],[3,[[5,[17]]]],[3,9],[[9,9],23],[[19,19],23],[[],23],[[],23],[[],9],[[],9],[[[2,[1]]],5],[[3,24],25],[[15,24],25],[[16,24],25],[[13,24],25],[[26,24],25],[[27,24],25],[[9,24],25],[[19,24],25],[[[2,[1]],23]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[28,[10]]],3],[[[2,[1]]],1],[[[2,[1]]],1],[3,[[5,[17]]]],0,0,0,0,0,[3,[[31,[[14,[29]],30]]]],[3,[[14,[[28,[10]]]]]],[16,[[28,[10]]]],[13,[[28,[10]]]],[[],9],[[[32,[4]]],3],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[20,[4]]],4],[[[2,[1]]],[[5,[1]]]],[[]],[[]],[9,23],[9,23],[9,23],[9,23],[26,23],[13,23],[12,23],[9,23],[9,23],[9,23],[9,23],[9,23],[9,23],[9,23],[9,23],[9,23],0,0,[33,[[31,[29,30]]]],[33,[[28,[10]]]],[26,[[5,[17]]]],[[[32,[4]]],[[5,[[14,[[34,[6]]]]]]]],[3,[[5,[[14,[[34,[6]]]]]]]],[[[32,[4]]],[[14,[[34,[[28,[10]]]]]]]],[3,[[14,[[34,[[28,[10]]]]]]]],0,0,0,0,0,0,0,[[[2,[1]],19]],[3,[[5,[18]]]],0,0,0,[3,[[5,[17]]]],0,0,0,0,0,0,[4,[[20,[4]]]],[1,[[2,[1]]]],[[],12],[[[28,[10]]],35],[10,9],[[],3],[[],3],[[],3],[[[21,[4]]],[[14,[[5,[[32,[4]]]]]]]],[35,[[14,[[5,[33]]]]]],0,[26,[[5,[17]]]],0,0,0,0,0,0,[[[32,[4]]],[[5,[[34,[6]]]]]],[3,[[5,[[34,[6]]]]]],[[[32,[4]]],[[34,[[28,[10]]]]]],[3,[[34,[[28,[10]]]]]],[16,[[34,[[28,[10]]]]]],[[[32,[4]]],[[5,[[14,[35]]]]]],0,[[[21,[4]],23],[[21,[4]]]],[[[32,[4]]],17],[[[32,[4]]],17],[[[32,[4]],[28,[10]]],[[5,[36]]]],[13,[[5,[17]]]],0,[[13,17]],[3],[[13,17]],[[3,18],5],[[16,18]],[[13,18]],[[3,18],5],[[16,18]],[[13,18]],[[3,9]],[[3,17]],[[3,29],5],[[16,29],5],[[13,29],5],[[[20,[4]],23]],[[3,[7,[6]]],5],[[3,[7,[[28,[10]]]]],5],[[[20,[4]],18]],[[[32,[4]],18]],[[3,37]],[[3,37,19]],[[3,18]],[[3,17]],[[[20,[4]],23]],[[3,[7,[6]]],5],[[16,[7,[6]]],5],[[[20,[4]],23]],[[[32,[4]],23]],[[[20,[4]],23]],[[[20,[4]],23]],[[[32,[4]],23]],[[3,17]],[[3,17]],[[[20,[4]],23]],[[[32,[4]],23]],[[3,29],5],[[16,29],5],[[13,29],5],[[[32,[4]]],17],[3,[[5,[17]]]],0,0,0,[12,[[11,[26]]]],0,0,[[],9],[[]],[[]],[[]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],[[],38],0,0,[3,[[5,[17]]]],0,0,0,0,0,[[[20,[4]],[7,[6]]],5],[[[32,[4]],[7,[6]]],[[5,[27]]]],[[[32,[4]],[7,[6]]],[[5,[23]]]],0,[3,[[31,[[14,[29]],30]]]],[3,[[14,[[28,[10]]]]]],[16,[[28,[10]]]],[13,[[28,[10]]]],[33,[[31,[29,30]]]],[33,[[28,[10]]]],0,0],"c":[],"p":[[8,"Write"],[3,"Builder"],[3,"Header"],[8,"Read"],[6,"Result"],[3,"Path"],[8,"AsRef"],[3,"File"],[4,"EntryType"],[15,"u8"],[15,"array"],[3,"GnuExtSparseHeader"],[3,"GnuHeader"],[4,"Option"],[3,"OldHeader"],[3,"UstarHeader"],[15,"u64"],[15,"u32"],[4,"HeaderMode"],[3,"Archive"],[3,"Entries"],[8,"Seek"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"GnuSparseHeader"],[4,"Unpacked"],[15,"slice"],[15,"str"],[3,"Utf8Error"],[4,"Result"],[3,"Entry"],[3,"PaxExtension"],[4,"Cow"],[3,"PaxExtensions"],[15,"usize"],[3,"Metadata"],[3,"TypeId"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
